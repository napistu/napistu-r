% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/neighborhoods.R
\name{plot_neighborhoods}
\alias{plot_neighborhoods}
\title{Summarize Neighborhoods}
\usage{
plot_neighborhoods(
  napistu_list,
  neighborhood_table,
  score_overlay = NULL,
  score_label = NULL,
  ...
)
}
\arguments{
\item{napistu_list}{A list containing loaded assets and bindings to
  Python modules.

\describe{
    \item{sbml_dfs}{
        SBML_dfs - the core pathway representation of the Napistu Python library
        }
    \item{napistu_graph}{
        Network graph - a Python igraph subclass with Napistu-specific
        attributes and methods
        }
    \item{species_identifiers}{Species identifier mappings}
    \item{precomputed_distances}{optional, distances between species nodes}
    \item{species_names}{
         A tibble containing the names of all genes, proteins, molecules, etc
         }
    \item{identifiers_nest}{
         A tibble with one row per ontology and a nested tibble containing
         all the identifiers and their corresponding molecular species
         }
    \item{python_modules}{A named list of Python modules: `napistu`}
    \item{python_environment}{See \link{validate_python_environment}}
    \item{napistu_config}{
        A `napistu_config` object dictating how the `napistu_list` was initialized
    }
    \item{loaded_at}{A date-time object indicating when `napistu_list` was initialized}
  }}

\item{neighborhood_table}{Neighborhood table created by
\code{create_neighborhood_table}}

\item{score_overlay}{optional, vertex-level scores containing `score`
and the merging attribute specified in `join_on`}

\item{score_label}{optional, name of disease being overlaid}

\item{...}{extra arguments passed to \code{\link{plot_one_neighborhood}}}
}
\description{
Summarize Neighborhoods
}
\examples{
suppressPackageStartupMessages(library(dplyr))
setup_napistu_list(create_napistu_config())
species_id <- random_species(napistu_list)

neighborhood_table <- create_neighborhood_table(
    napistu_list,
    species_id = species_id,
    max_steps = 3L,
    max_neighbors = 40L,
)

# score_overlay <- summarize_indication(
#   napistu_list,
#   disease_id = "EFO_0000400",
#   create_neighborhood_summary_table(neighborhood_table)
# )

score_overlay <- neighborhood_table \%>\%
    dplyr::select(vertices) \%>\%
    tidyr::unnest(vertices) \%>\%
    dplyr::filter(node_type == "species") \%>\%
    dplyr::distinct(s_id) \%>\%
    dplyr::sample_frac(0.5) \%>\%
    dplyr::mutate(score = stats::rnorm(dplyr::n()))

neighborhood_summaries <- plot_neighborhoods(
    napistu_list,
    neighborhood_table,
    score_overlay,
    score_label = "random scores",
    score_palette = "log2 fold-change"
)
}
