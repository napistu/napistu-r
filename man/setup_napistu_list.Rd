% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/config.R
\name{setup_napistu_list}
\alias{setup_napistu_list}
\title{Setup Napistu List}
\usage{
setup_napistu_list(
  napistu_config,
  napistu_list_object = "napistu_list",
  overwrite = FALSE,
  verbose = TRUE,
  skip_validation = FALSE
)
}
\arguments{
\item{napistu_config}{A napistu configuration object of class `napistu_config`
containing all necessary configuration settings for the loading required
assets and configuring and/or using an exiting appropriate Python environment.
This config can be read from a yaml file using \link{load_napistu_config} or
directly specified in R using \link{create_napistu_config}. Contains:
  
\describe{
    \item{python_config}{
        A shallow list defining the Python environment.
        See \link{validate_python_config}
    }
    \item{assets_config}{
        A shallow list defining the Napistu assets to use.
        See \link{validate_assets_config}
    }
    \item{created_at}{Time stamp}
}}

\item{napistu_list_object}{The name that setup_napistu_env() will be assigned to.
If this object already exists then setup will be skipped unless `overwrite` is TRUE}

\item{overwrite}{Overwrite existing caches}

\item{verbose}{Logical scalar; if TRUE (default), prints informative messages
about the current operation progress. If FALSE, runs silently.}

\item{skip_validation}{if FALSE, use `validate_asset_list_thorough` to 
comprehensively validate assets. If TRUE, asset validation is skipped. This
can be helpful when working with assets which have already been validated
because asset validation can be slow.}
}
\value{
None; output is assigned to `napistu_list_object`
}
\description{
Load a config specifying a Python environment and paths to Napistu assets
  as a list providing defaults as fall-backs.
}
\examples{
\dontrun{
napistu_config <- create_napistu_config()
setup_napistu_list(napistu_config)

# Using config file
setup_napistu_list("my_config.yml")
}
}
